{"version":3,"sources":["components/Button/Button.module.css","components/ImageGallery/ImageGallery.module.css","components/Preloader/Preloader.module.css","components/Searchbar/SearchBar.module.css","utils/imagesApi.js","components/Button/Button.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Searchbar/SearchBar.js","components/Preloader/Preloader.js","components/Modal/Modal.js","App.js","serviceWorker.js","index.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css"],"names":["module","exports","imagesApi","searchQuery","pageNumber","Axios","get","then","data","Button","text","clickHandler","onClick","className","styles","ImageGalleryItem","imageSrc","alt","bigImgUrl","onSetBigImageUrl","src","ImageGalleryItemImage","ImageGallery","images","imageGalleryItems","map","img","key","id","webformatURL","tags","largeImageURL","SearchBar","state","inputValue","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","Searchbar","SearchForm","this","type","SearchFormButton","SearchFormButtonLabel","onChange","SearchFormInput","autoComplete","autoFocus","placeholder","Component","Preloader","color","height","width","Modal","onCloseModal","children","Overlay","App","error","loading","largeImgUrl","fetchImages","prevState","hits","catch","finally","handleSearchFormSubmit","query","setBigImageUrl","url","smoothScroll","window","scrollTo","top","document","documentElement","scrollHeight","behavior","closeModal","code","prevProps","prevQuery","nextQuery","prevPage","nextPage","prevLargeImg","nextLargeImg","addEventListener","removeEventListener","length","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.2a04fb97.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1Kz8b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__32TsP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preloader\":\"Preloader_Preloader__1Hlrn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchBar_Searchbar__22rFB\",\"SearchForm\":\"SearchBar_SearchForm__1B6Ij\",\"SearchFormButton\":\"SearchBar_SearchFormButton__3SjXl\",\"SearchFormButtonLabel\":\"SearchBar_SearchFormButtonLabel__1Hu6D\",\"SearchFormInput\":\"SearchBar_SearchFormInput__3IvJ2\"};","import Axios from \"axios\";\r\nconst BASIC_URL = \"https://pixabay.com/api/\";\r\nconst API_KEY = \"3616495-8ef67a89dfdb2c2d531583fa2\";\r\n\r\nexport const imagesApi = (searchQuery, pageNumber) => {\r\n  return Axios.get(\r\n    `${BASIC_URL}?q=${searchQuery}&page=${pageNumber}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=15`\r\n  ).then(({ data }) => data);\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./Button.module.css\";\r\n\r\nconst Button = ({ text, clickHandler }) => {\r\n  return (\r\n    <button onClick={clickHandler} className={styles.Button}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport styles from \"./ImageGalleryItem.module.css\";\r\n\r\nconst ImageGalleryItem = ({ imageSrc, alt, bigImgUrl, onSetBigImageUrl }) => {\r\n  return (\r\n    <li className={styles.ImageGalleryItem} onClick={() => onSetBigImageUrl(bigImgUrl)}>\r\n      <img src={imageSrc} alt={alt} className={styles.ImageGalleryItemImage} />\r\n    </li>\r\n  );\r\n};\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport styles from \"./ImageGallery.module.css\";\r\nimport ImageGalleryItem from \"./ImageGalleryItem/ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({ images, onSetBigImageUrl }) => {\r\n  const imageGalleryItems = images.map((img) => (\r\n    <ImageGalleryItem\r\n      key={img.id}\r\n      imageSrc={img.webformatURL}\r\n      alt={img.tags}\r\n      bigImgUrl={img.largeImageURL}\r\n      onSetBigImageUrl={onSetBigImageUrl}\r\n    />\r\n  ));\r\n  return <ul className={styles.ImageGallery}>{imageGalleryItems}</ul>;\r\n};\r\nexport default ImageGallery;\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./SearchBar.module.css\";\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    inputValue: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.inputValue);\r\n    this.setState({ inputValue: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className={styles.Searchbar}>\r\n        <form className={styles.SearchForm} onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className={styles.SearchFormButton}>\r\n            <span className={styles.SearchFormButtonLabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            onChange={this.handleChange}\r\n            className={styles.SearchFormInput}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.inputValue}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport styles from \"./Preloader.module.css\";\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div className={styles.Preloader}>\r\n      <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","import React from \"react\";\r\nimport styles from \"./Modal.module.css\";\r\nconst Modal = ({ onCloseModal, children }) => {\r\n  return (\r\n    <div className={styles.Overlay} onClick={onCloseModal}>\r\n      <div className={styles.Modal}>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\nimport { imagesApi } from \"./utils/imagesApi\";\nimport \"./App.css\";\n\nimport Button from \"./components/Button/Button\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\nimport SearchBar from \"./components/Searchbar/SearchBar\";\nimport Preloader from \"./components/Preloader/Preloader\";\nimport Modal from \"./components/Modal/Modal\";\n\nclass App extends Component {\n  state = {\n    images: [],\n    searchQuery: \"\",\n    pageNumber: 1,\n    error: \"\",\n    loading: false,\n    largeImgUrl: null,\n  };\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n\n    const prevPage = prevState.pageNumber;\n    const nextPage = this.state.pageNumber;\n\n    const prevLargeImg = prevState.largeImgUrl;\n    const nextLargeImg = this.state.largeImgUrl;\n\n    if (prevQuery !== nextQuery) {\n      this.fetchImages();\n    }\n\n    if (prevPage !== nextPage) {\n      this.smoothScroll();\n    }\n\n    if (nextLargeImg) window.addEventListener(\"keydown\", this.closeModal);\n    if (prevLargeImg) window.removeEventListener(\"keydown\", this.closeModal);\n  }\n\n  fetchImages = () => {\n    const { searchQuery, pageNumber } = this.state;\n    this.setState({ loading: true });\n    imagesApi(searchQuery, pageNumber)\n      .then((images) => {\n        this.setState((prevState) => ({\n          images: [...prevState.images, ...images.hits],\n          pageNumber: prevState.pageNumber + 1,\n        }));\n      })\n      .catch((error) => this.setState({ error: error }))\n      .finally(() => this.setState({ loading: false }));\n  };\n\n  handleSearchFormSubmit = (query) => {\n    this.setState({ searchQuery: query, pageNumber: 1, images: [] });\n  };\n\n  setBigImageUrl = (url) => {\n    this.setState({ largeImgUrl: url });\n  };\n\n  smoothScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  closeModal = (e) => {\n    if (e.code === \"Escape\") {\n      this.setState({ largeImgUrl: null });\n    } else if (e.target.src !== this.state.largeImgUrl) {\n      this.setState({ largeImgUrl: null });\n    }\n  };\n\n  render() {\n    const { images, loading, largeImgUrl } = this.state;\n    return (\n      <div className=\"App\">\n        <SearchBar onSubmit={this.handleSearchFormSubmit} />\n        <ImageGallery onSetBigImageUrl={this.setBigImageUrl} images={images} />\n        {loading && <Preloader />}\n        {images.length > 0 && !loading && (\n          <Button text=\"Load more\" clickHandler={this.fetchImages} />\n        )}\n        {largeImgUrl && (\n          <Modal onCloseModal={this.closeModal}>\n            <img src={largeImgUrl} alt=\"modalImg\"></img>\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3dPMd\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__Rxqne\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3RxN4\",\"Modal\":\"Modal_Modal__1UBle\"};"],"sourceRoot":""}